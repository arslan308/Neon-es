<link rel="stylesheet" href="{{ 'custom-steps-form-section.css' | asset_url }}">

{% if template == 'product.lead_page_logo_upload' %}
  <style>
        section.section.image-with-text-sale-page.image_text_sec{background: white;}
        .img-card-custom-form.section{background: white;}
        .custom_steps_form{background: white; padding: 15px 0 60px;}
        .logo-list-section{background: white;}
        .step_form_inner .form-input-wide h4{
          font-size: 18px;
          font-weight: 700;
          max-width: 100%;
          line-height: 23px;
          margin-bottom: 16px;
        }
        .video_potion .video_potion-for-desktop{
          display: block;
        }
    @media screen and (max-width: 600px) {
      .video_potion .video_potion-for-desktop{
          display: none;
        }
        .video_potion .video_potion-for-mobile{
          display: block !important;
        }
    }
  </style>
{% endif %}
<div class="custom_steps_form">
  <div class="container">
    <div class="step_form_inner">
      <div class="step_form_row">
        <div class="video_part">
          <div class="video_potion">
            <div class="video_potion-for-desktop">
              <video class="img-fluid desktop-video" style="width: 100%;" muted playsinline autoplay>
                <source src="{{ section.settings.Video_url }}" type="video/mp4">
                Your browser does not support the video tag.
              </video>
            </div>
            <div class="video_potion-for-mobile" style="display:none;">
              {% if section.settings.Mobile_video_url != blank %}
                <video class="img-fluid mobile-video" style="width: 100%;" muted playsinline autoplay>
                  <source src="{{ section.settings.Mobile_video_url }}" type="video/mp4">
                  Your browser does not support the video tag.
                </video>
              {% else %}
                <video
                  class="img-fluid desktop-video fallback-on-mobile"
                  style="width: 100%;"
                  muted
                  playsinline
                  autoplay
                >
                  <source src="{{ section.settings.Video_url }}" type="video/mp4">
                  Your browser does not support the video tag.
                </video>
              {% endif %}
            </div>
          </div>
          <div class="timer_box" {% if section.settings.formButtonQouteImage != blank %} style="background-image: url( {{section.settings.formButtonQouteImage |img_url:"master" }});" {% endif %}>
            <div>
              {{ section.settings.formButtonQoute }}
            </div>
          </div>

          {% assign video = '' %}
          {% assign is_one = 0 %}
          {% assign duration = '' %}

          <div class="hidden-agents-videos" style="display: none;">
          {% for block in section.blocks %}
            {% if block.type == 'agent' %}
            <div class="agent-video" style="display: none;">
              <span class="agent_video">{{ block.settings.agent_video }}</span>
              <span class="agent_name">{{ block.settings.agent_name }}</span>
              <span class="agent_duration">{{ block.settings.agent_duration }}</span>
             </div>
            {% endif %}
          {% endfor %}
          </div>
          <div class="custom-video-wrapper" style="display: none;">
            {% if section.settings.custom_video_title != blank %}
              <h3 class="custom-video-title">{{ section.settings.custom_video_title }}</h3>
            {% endif %}
              <div class="custom-video-container">
                <video preload="metadata" id="customVideo" class="custom-video" muted playsinline preload="metadata" style="width:100%; height:auto;">
                  <source src="" type="video/mp4">
                  Your browser does not support the video tag.
                </video>
          
                <div class="custom-video-overlay" id="customPlayButton">
                  <button class="play-button"></button>
                  <div class="video-duration" style="color: white;width:100%;" id="videoDuration">0:00</div>
                </div>
          
              </div>
          </div>          
        </div>
        <div class="form_part">
          <div class="form_inner">
            <div class="tab-status">
              <span class="tab first_tab active">
                <div class="tab_name">{{ section.settings.tabTitle1 }}</div>
              </span>
              <span class="tab sec_tab">
                <div class="tab_name">{{ section.settings.tabTitle2 }}</div>
              </span>
            </div>
            <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
            <script src="https://cdn.jsdelivr.net/jquery.slick/1.4.1/slick.min.js"></script>

            <style type="text/css">
              @media print {
                * {
                  -webkit-print-color-adjust: exact !important;
                  color-adjust: exact !important;
                }
                .form-section {
                  display: inline !important
                }
                .form-pagebreak {
                  display: none !important
                }
                .form-section-closed {
                  height: auto !important
                }
                .page-section {
                  position: initial !important
                }
              }
            </style>
            <link
              type="text/css"
              rel="stylesheet"
              href="https://cdn02.jotfor.ms/themes/CSS/5e6b428acc8c4e222d1beb91.css?v=3.3.57597"
            >
            <link
              type="text/css"
              rel="stylesheet"
              href="https://cdn03.jotfor.ms/css/styles/payment/payment_styles.css?3.3.57597"
            >
            <link
              type="text/css"
              rel="stylesheet"
              href="https://cdn01.jotfor.ms/css/styles/payment/payment_feature.css?3.3.57597"
            >

            <form class="jotform-form">
              <input type="hidden" name="bgurl" id="bgurl">
              <input type="hidden" name="logourl" id="logourl">
              <input type="hidden" name="submissionid" id="submissionid">
              <input type="hidden" name="source" id="source">
              <input type="hidden" name="field" id="field">
              <input type="hidden" name="gclid" id="gclid">
              <input type="hidden" name="fbclid" id="fbclid">
              <input type="hidden" name="msclkid" id="msclkid">
              <input type="hidden" name="budget" id="budget">
              <input type="hidden" name="timeline" id="timeline">
              <input type="hidden" name="company_type" id="company_type">

              <div role="main" class="form-all">
                <ul class="form-section page-section step-1" date-step="1">
                  <li class="form-line" data-type="control_fileupload" id="id_3">
                    <div class="title-form-step">
                      {{ section.settings.tabContent1 }}
                      <ul>
                        {% if section.settings.MainList != blank %}
                          {{ section.settings.MainList }}
                        {% endif %}
                      </ul> 
                    </div>
                    <div id="cid_3" class="form-input-wide drag-drop-area">
                      <div class="jfUpload-wrapper">
                        <div class="jfUpload-button-container">
                          <input
                            type="file"
                            name="logo"
                            id="fileInput"
                            accept=".jpg, .jpeg, .png, .svg, .eps, .pdf, .ai, .heic, .psd, .webp"
                          >
                          <div class="jfUpload-button">
                            <div class="jfUpload-heading">{{ section.settings.uploadContent }}</div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div id="file-error" style="color: red; margin-top: 5px; font-size: 11px;"></div>
                    <div class="file-types">
                      {{ section.settings.validfiles }}: JPG, JPEG, PNG, EPS, PDF, AI, SVG, HEIC, WEBP, PSD
                    </div>
                    <div class="file-required">{{ section.settings.required }}*</div>
                  </li>

                  <li id="file-preview"></li>
                  <li id="cid_11" class="form-input-wide" data-type="control_pagebreak">
                    <div class="form-pagebreak" data-component="pagebreak">
                      <div class="form-pagebreak-next-container">
                        <button
                          id="form-pagebreak-next_11"
                          type="button"
                          aria-required="true"
                          class="form-pagebreak-next  jf-form-buttons"
                          data-component="pagebreak-next"
                        >
                          {{ section.settings.Button1 }}
                        </button>
                      </div>
                    </div>
                  </li>
                  <div class="client-review">
                    <div class="star-svg">
                      <svg width="94" height="18" viewBox="0 0 94 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M3.04195 17.34L5.18195 10.98L0.0219532 7.52H6.34195L8.60195 0.699999L10.902 7.52H17.182L12.022 10.98L14.202 17.34L8.60195 13.28L3.04195 17.34ZM22.2412 17.34L24.3812 10.98L19.2212 7.52H25.5412L27.8012 0.699999L30.1012 7.52H36.3812L31.2212 10.98L33.4012 17.34L27.8012 13.28L22.2412 17.34ZM41.4404 17.34L43.5804 10.98L38.4204 7.52H44.7404L47.0004 0.699999L49.3004 7.52H55.5804L50.4204 10.98L52.6004 17.34L47.0004 13.28L41.4404 17.34ZM60.6396 17.34L62.7796 10.98L57.6196 7.52H63.9396L66.1996 0.699999L68.4996 7.52H74.7796L69.6196 10.98L71.7996 17.34L66.1996 13.28L60.6396 17.34ZM79.8388 17.34L81.9788 10.98L76.8188 7.52H83.1388L85.3988 0.699999L87.6988 7.52H93.9788L88.8188 10.98L90.9988 17.34L85.3988 13.28L79.8388 17.34Z" fill="#FFBB0E"></path>
                      </svg>
                    </div>
                    <div class="star-rating">
                      {{ section.settings.customer_review }}
                    </div>
                  </div>
                </ul>
                <ul class="form-section page-section step-2" date-step="2" style="display:none;">
                  {{ section.settings.FormHeading }}
                  <li class="form-line" data-type="control_textbox" id="id_4">
                    <label
                      class="form-label form-label-top form-label-auto"
                      id="label_4"
                      for="input_4"
                      aria-hidden="false"
                    >
                      {{ section.settings.inputlable1 }}
                      <sub>*</sub>
                      <span class="required-field">{{ section.settings.required }}*</span>
                    </label>
                    <div id="cid_4" class="form-input-wide">
                      <input
                        type="text"
                        id="input_4"
                        name="q4_typeA"
                        class="form-textbox"
                        size="310"
                        placeholder="{{ section.settings.inputplaceholder1 }}"
                      >
                    </div>
                  </li>
                  <li class="form-line" data-type="control_email" id="id_5">
                    <label
                      class="form-label form-label-top form-label-auto"
                      id="label_5"
                      for="input_5"
                      aria-hidden="false"
                    >
                      {{ section.settings.inputlable2 }}
                      <sub>*</sub>
                      <span class="required-field">{{ section.settings.required }}*</span>
                      <span class="email-error">{{ section.settings.emailformat }}*</span>
                    </label>
                    <div id="cid_5" class="form-input-wide">
                      <span
                        class="form-sub-label-container"
                        style="vertical-align:top"
                        ><input
                          type="email"
                          id="input_5"
                          name="q5_email"
                          class="form-textbox validate[Email]"
                          autoComplete="section-input_5 email"
                          size="310"
                          placeholder="{{ section.settings.inputplaceholder2 }}"
                      ></span>
                    </div>
                  </li>
                  <li class="form-line" data-type="control_phone" id="id_6" data-compound-hint="telefoon">
                    <label
                      class="form-label form-label-top form-label-auto"
                      id="label_6"
                      for="input_6_full"
                    >
                      {{ section.settings.inputlable3 }}
                      <sub>*</sub>
                      <span class="required-field">{{ section.settings.required }}*</span>
                      <span class="phone-error">{{ section.settings.phoneformat }}*</span>
                    </label>
                    <div id="cid_6" class="form-input-wide">
                      <div
                        class="form-sub-label-container"
                        style="vertical-align:top"
                      >
                        <input
                          type="tel"
                          id="input_6_full"
                          name="q6_phoneNumber[full]"
                          class="mask-phone-number form-textbox validate[Fill Mask]"
                          placeholder="{{  section.settings.inputplaceholder3 }}"
                        >
                      </div>
                    </div>
                  </li>
                  <li id="cid_12" class="form-input-wide" data-type="control_pagebreak">
                    <div class="form-pagebreak" data-component="pagebreak">
                      <div class="form-pagebreak-next-container">
                        <button
                          id="form-pagebreak-next_12"
                          type="button"
                          class="form-pagebreak-next  jf-form-buttons q23232"
                          data-component="pagebreak-next"
                        >
                          {{ section.settings.ButtonTextForm }}
                          <span class="loading-dots" style="display: none;">{%- render 'icon', icon: 'newloader' %}</span>
                        </button>
                      </div>
                    </div>
                    <div class="term-condition">
                      <input type="checkbox" name="terms" id="terms" checked>
                      <p>{{ section.settings.terms }}</p>
                    </div>
                    {% if section.settings.newterms != blank %}
                    <div class="term-condition-new">
                      <input type="checkbox" name="terms-new" id="terms-new" checked>
                      <p>{{ section.settings.newterms }}</p>
                    </div>
                    {% endif %}
                  </li>
                </ul>
                <ul class="form-section page-section step-3 unique-third" date-step="3" style="display:none;">
                  <li class="mt-0">
                    <div class="title_box">
                      <h2>{{ section.settings.freeSample }}</h2>
                      <p>{{ section.settings.freeSampleDesc }}</p>
                    </div>
                  </li>
                  <input type="hidden" name="custom_answers" id="customAnswers">
                  {% for block in section.blocks %}
                    {% if block.type == 'tab' %}
                      <li class="form-line box_inner radio_box {{ block.settings.drop_Type }} {{ block.settings.company_types }}" id="id_7{{ forloop.index }}" step-data-index="{{ forloop.index }}">
                        <label class="form-label-title" id="label_7{{ forloop.index }}">
                          {{- block.settings.tab_title -}}
                        </label>
                        <div id="cid_7{{ forloop.index }}" class="form-input-wide" data-required="{{ block.settings.required }}">
                          {% assign options = block.settings.tab_buttons | split: ',' %}
                          {% case block.settings.customization_type %}
                            
                            {% when 'dropdown' %}
                              <select class="form-dropdown unique-dropdown" data-target="#{{ block.settings.drop_Type }}">
                                <option disabled selected>{{ section.settings.selectoption }}</option>
                                {% for option in options %}
                                  <option value="{{ option | strip }}">{{ option | strip }}</option>
                                {% endfor %}
                              </select>
                            
                              {% when 'radio' %}
                                {% assign tabbuttons = block.settings.tab_buttons | split: ',' %}
                                <div class="form-multiple-column" role="radiogroup" aria-labelledby="label_7{{ forloop.index }}">
                                  {% for tabbutton in tabbuttons %}
                                    <label class="form-radio-item radio-button-form">
                                      <input
                                        type="radio"
                                        name="radio_group_{{ forloop.parentloop.index }}"
                                        id="radio_{{ forloop.parentloop.index }}_{{ forloop.index }}"
                                        value="{{ tabbutton | strip }}" data-target="#{{ block.settings.drop_Type }}"
                                      />
                                      <div style="display: inline-block;" for="radio_{{ forloop.parentloop.index }}_{{ forloop.index }}">
                                        <button type="button" class="form-button">{{ tabbutton | strip }}</button>
                                      </div>
                                    </label>
                                  {% endfor %}
                                </div>
                            
                                {% when 'button' %}
                                  <div class="form-multiple-column buttons-group">
                                    {% assign indx = 0 %}
                                    {% for option in options %}
                                    <div class="form-radio-item">
                                        <button data-type="{% if indx == 0 %}business{% else %}personal{% endif %}"
                                          type="button" 
                                          class="unique-form-button toggle-select form-radio-item-label"
                                          data-group="button_group_{{ forloop.parentloop.index }}">
                                          {{ option | strip }}
                                        </button>
                                      </div>
                                      {% assign indx =  1 %}
                                    {% endfor %}
                                  </div>
                          {% endcase %}
                        </div>
                      </li>
                    {% endif %}
                  {% endfor %}
                  <div style="width: 100%; text-align: center; padding: 10px 0 0 0;">
                      <div style="width: 100%; display: flex ; justify-content: center;">
                        <button id="form-pagebreak-next_13" type="button" class="start-design" style="width: 100%; border-radius: 30px !important; color: #fff; white-space: nowrap; background: #ff13a7; text-decoration: none; position: relative; display: flex ; padding: 0 30px !important; line-height: 48px; text-align: center; font-weight: var(--text-font-bolder-weight); font-size: 16px; cursor: pointer; transition: background .25s ease-in-out, color .25s ease-in-out, box-shadow .25s ease-in-out; justify-content: center; align-items: center;">{{ section.settings.start_my_design }}</button>               
                      </div>
                      <div class="error-message global-error" style="color:red; font-size:14px; margin-top:4px;">
                        {{ section.settings.field_error }}
                      </div>
                  </div>
                </ul>
                <ul class="form-section page-section step-4" date-step="4" style="display:none;">
                  <li class="form-line" id="id_13">
                    <div id="cid_13" class="form-input-wide box_inner" data-layout="full">
                      <div class="title_box">
                        <h2>{{ section.settings.freeSample }}</h2>
                        <p>{{ section.settings.freeSampleDesc }}</p>
                      </div>
                      {{ section.settings.freeSampleFormDescription }}
                      {% if section.settings.trust_lists != blank %}
                        <ul clas="page-trust-list">{{ section.settings.trust_lists }}</ul>
                      {% endif %}
                      <div class="jfUpload-wrapper">
                        <div class="jfUpload-button-container">
                          <input
                            type="file"
                            name="bglogo"
                            id="bgfileInput"
                            accept=".jpg, .jpeg, .png, .svg, .eps, .pdf, .ai, .heic, .psd, .webp"
                          >
                          <div class="jfUpload-button">
                            <div class="jfUpload-heading">{{ section.settings.uploadContent2 }}</div>
                          </div>
                        </div>
                      </div>
                      <div id="file-error-2" style="color: red; margin-top: 5px; font-size: 11px;"></div>
                      <div class="file-types">
                        {{ section.settings.validfiles }}: JPG, JPEG, PNG, EPS, PDF, AI, SVG, HEIC, WEBP, PSD
                      </div>
                      <div class="bg-file-required">{{ section.settings.required }}*</div>
                      <div id="bg-file-preview"></div>

                      <div class="form-pagebreak" data-component="pagebreak">
                        <div class="form-pagebreak-next-container" style="display: grid;">
                          <button
                            id="form-pagebreak-next_14"
                            type="button"
                            class="form-pagebreak-next  jf-form-buttons"
                            data-component="pagebreak-next"
                          >
                            {{ section.settings.uploadPhotobuttonfree }}
                          </button>
                          <div class="skip-text">{{ section.settings.skip }}</div>
                        </div>
                      </div>
                    </div>
                  </li>
{% comment %} 
                  <li id="cid_14" class="form-input-wide bg-1" data-type="control_pagebreak">
                    <div class="form-pagebreak" data-component="pagebreak">
                    </div>
                  </li> {% endcomment %}
                </ul>

                <ul class="form-section page-section step-5" date-step="5" style="display:none;">
                  <li class="mt-0">
                    <div class="title_box">
                      <h2>{{ section.settings.freeSample }}</h2>
                      <p>{{ section.settings.freeSampleDesc }}</p>
                    </div>
                  </li>

                  <li class="form-line" data-type="control_textarea" id="id_9">
                    <div class="main-section-threee-image youtube-video-and-images lead-page">
                      <div class="wrap-sec-images">
                        <div class="col-md-12">
                          <div class="image-wrapper">
                            {% for block in section.blocks %}
                              {% if block.type == 'Image' %}
                                <div class="img-box">
                                  <img
                                    class="img-fluid"
                                    src="{{ block.settings.img-card | img_url:'master' }}"
                                    alt="Image"
                                    width="auto"
                                  >
                                </div>
                              {% endif %}
                            {% endfor %}
                          </div>
                        </div>
                      </div>
                    </div>
                  </li>
                </ul>
              </div>
            </form>

            <div class="timer_box">
              {{ section.settings.formButtonQoute }}
            </div>
          </div>
          <div class="arrive_text">
            <span>
              {{ section.settings.QouteText }}
              <span class="del-on-t"></span>
              {% assign current_date = 'now' | date: '%d' %}
              {% assign current_month = 'now' | date: '%B' %}
              {% assign current_year = 'now' | date: '%Y' %}
              {% assign current_timestamp = current_year
                | append: '-'
                | append: current_month
                | append: '-'
                | append: current_date
                | date: '%s'
              %}
              {% assign new_timestamp = current_timestamp | plus: 777600 %}
              {% assign new_date = new_timestamp | date: '%d' %}
              {% assign new_month = new_timestamp | date: '%B' %}
              {% assign formatted_delivery_date = section.settings.delivery_date
                | replace: '{day}', new_date
                | replace: '{month}', new_month
              %}
              <b>{{ formatted_delivery_date }}</b>
              <div>{{ section.settings.timer_text }}</div>
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    document.querySelectorAll('.radio-button-form').forEach(function(item) {
      item.addEventListener('click', function () {
        const radioInput = item.querySelector('input[type="radio"]');
        if (radioInput) {
          radioInput.checked = true;
          radioInput.dispatchEvent(new Event('change')); // trigger any change listeners
        }
      });
    });
  });
</script>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    $('.form-radio-item-label').on('click', function () {
        $('.form-radio-item-label').removeClass('active');
        $(this).addClass('active');
        var selectedValue = $(this).text().trim();
        $('#field').val(selectedValue);
        addRecord();
      });

      $(".unique-dropdown").on("change", function () {
        const selectedValue = $(this).val();
        const targetInput = $(this).data("target");
        $(targetInput).val(selectedValue);
      });

      $('input[type="radio"]').on("change", function () {
        const selectedValue = $(this).val();
        const targetInput = $(this).data("target");
        $(targetInput).val(selectedValue);
      });


    const startBtn = document.querySelector('.start-design');
    const globalError = document.querySelector('.global-error');

    globalError.style.visibility = 'hidden';

    startBtn.addEventListener('click', function (e) {
      e.preventDefault(); 

      let hasError = false;

      document.querySelectorAll('.form-input-wide').forEach(function (wrapper) {
        const parent = wrapper.closest('li');
        const isRequired = wrapper.getAttribute('data-required') === 'true';

        let value = '';
        const select = wrapper.querySelector('select');
        const radios = wrapper.querySelectorAll('input[type="radio"]');
        const selectedBtn = wrapper.querySelector('.toggle-select.selected');

        if (select) {
          value = select.value !== '{{ section.settings.selectoption }}' ? select.value : '';
          if (isRequired && !value) hasError = true;
        }
        else if (radios.length > 0) {
          const checked = Array.from(radios).find(r => r.checked);
          if (checked) value = checked.value;
          else if (isRequired) hasError = true;
        }
        else if (selectedBtn) {
          value = selectedBtn.textContent.trim();
        }
        else if (isRequired) {
          hasError = true;
        }

        const labelEl = parent?.querySelector('.form-label-title');
        if (isRequired && !value && labelEl) {
          labelEl.style.color = 'red';
          if (!labelEl.querySelector('.required-asterisk')) {
            const star = document.createElement('span');
            star.classList.add('required-asterisk');
            star.style.color = 'red';
            star.textContent = ' *';
            labelEl.appendChild(star);
          }
        } else if (labelEl) {
          labelEl.style.color = '';
          const existingAsterisk = labelEl.querySelector('.required-asterisk');
          if (existingAsterisk) existingAsterisk.remove();
        }
      });

      if (hasError) {
        globalError.style.visibility = 'visible';
      } else {
        globalError.style.visibility = 'hidden';

        document.querySelector('.step-3').style.display = 'none';
        document.querySelector('.step-4').style.display = 'block';
        addRecord();
        webhookCall('{{ section.settings.webhook2 }}'); ///webhook 2
      }
    });
  });
</script>

<script>
document.getElementById('fileInput').addEventListener('change', function () {
  const file = this.files[0];
  const errorContainer = document.getElementById('file-error');
  if (!file) return;
  const fileSizeKB = file.size / 1024;
  const fileSizeMB = fileSizeKB / 1024;

  if (fileSizeKB < 1) {
    errorContainer.textContent = "{{ section.settings.filesizemin }}";
    this.value = '';
  } else if (fileSizeMB > 20) {
    errorContainer.textContent = "{{ section.settings.filesizemax }}";
    this.value = '';
  } else {
    errorContainer.textContent = '';
    console.log('File is valid:', file.name, `${fileSizeMB.toFixed(2)} MB`);
  }
});

$(document).ready(function () {
    const dropArea = $('#cid_3');
    const fileInput = $('[name="logo"]');
    const errorContainer = $('<div id="file-error" style="color:red; margin-top:5px; font-size: 11px;"></div>');
    dropArea.after(errorContainer);

    function validateFileSize(file) {
        const sizeKB = file.size / 1024;
        const sizeMB = sizeKB / 1024;

        if (sizeKB < 1) {
            errorContainer.text("{{ section.settings.filesizemin }}");
            return false;
        } else if (sizeMB > 20) {
            errorContainer.text("{{ section.settings.filesizemax }}");
            return false;
        } else {
            errorContainer.text(""); // Clear any error
            return true;
        }
    }

    dropArea.on('dragover', function (event) {
        event.preventDefault();
        event.stopPropagation();
        $(this).addClass('drag-over');
    });

    dropArea.on('dragleave', function (event) {
        event.preventDefault();
        event.stopPropagation();
        $(this).removeClass('drag-over');
    });

    dropArea.on('drop', function (event) {
        event.preventDefault();
        event.stopPropagation();
        $(this).removeClass('drag-over');

        let files = event.originalEvent.dataTransfer.files;
        if (files.length > 0) {
            const file = files[0];
            if (validateFileSize(file)) {
                fileInput[0].files = files;
                console.log('Files dropped:', file);
                handleFilePreview(file);
            } else {
                fileInput.val('');
            }
        }
    });

    dropArea.on('click', function (event) {
        event.stopImmediatePropagation();

        if (!fileInput.data('clicked')) {
            fileInput.data('clicked', true);
            fileInput.trigger('click');

            setTimeout(() => {
                fileInput.removeData('clicked');
            }, 500);
        }
    });

    fileInput.change(function () {
        const file = this.files[0];
        if (file && validateFileSize(file)) {
            console.log('File selected:', file);
            handleFilePreview(file);
        } else {
            $(this).val('');
        }
    });
});
function generateRandomId() {
    return 'file-' + Math.random().toString(36).substr(2, 9); // Generates a random ID
}
  
function handleFilePreview(file) {
  console.log('in handleFilePreview function');
    const previewContainer = $('#file-preview');
    const reader = new FileReader();
    const fileId = generateRandomId(); // Generate a random ID for each file
  
    reader.onload = function (e) {
        console.log('in reader onload');
        console.log(file.type);
        const fileSize = (file.size / 1024).toFixed(2) + " KB"; // Convert to KB
        let html = '';
        let previewHtml = '';

        if (file.type.startsWith('image/')) {
            console.log('uploading image')
            html = `
                <div class="file-preview-item bg-file-preview-item">
                    <div class="image-with-title">
                        <img src="${e.target.result}" alt="${file.name}" class="file-preview-image" style="max-width: 25px; max-height: 25px;">
                        <p>${file.name} (${fileSize})</p>
                    </div>
                    <p class="delete-element"></p>
                </div>
            `;
            previewHtml = `
                      <div class="file-preview-item bg-file-preview-item" id="${fileId}">
                          <div class="image-with-title">
                                 <img src="${e.target.result}" alt="${file.name}" class="file-preview-image" style="max-width: 25px; max-height: 25px;">
                                 <p>Uploading ${file.name} (${fileSize})</p>
                          </div>
                              <p class="uploadContainer"><span id="loading-dots">{%- render 'icon', icon: 'loader' %}</span></p>
                      </div>
            `;
        } else if (file.type === "application/pdf") {
            console.log('uploading pdf');
            html = `
                <div class="file-preview-item bg-file-preview-item">
                    <div class="image-with-title">
                        <img src="https://cdn.shopify.com/s/files/1/0779/7686/3066/files/81975517a51651e8f8940759360d01da.jpg?v=1743361832" alt="${file.name}" class="file-preview-image" style="max-width: 25px; max-height: 25px;">
                        <p>${file.name} (${fileSize})</p>
                    </div>
                    <p class="delete-element"></p>
                </div>
            `;
            previewHtml = `
            <div class="file-preview-item bg-file-preview-item" id="${fileId}">
                <div class="image-with-title">
                       <img src="https://cdn.shopify.com/s/files/1/0779/7686/3066/files/81975517a51651e8f8940759360d01da.jpg?v=1743361832" alt="${file.name}" class="file-preview-image" style="max-width: 25px; max-height: 25px;">
                        <p>Uploading ${file.name} (${fileSize})</p>
                  </div>
                    <p class="uploadContainer"><span id="loading-dots">{%- render 'icon', icon: 'loader' %}</span></p>
            </div>
            `;
        } else {
             const errorContainer = document.getElementById('file-error');
             errorContainer.textContent = "{{ section.settings.unsupport }}.";
        }
      if (file.type.startsWith('image/') || file.type === "application/pdf") {
          previewContainer.html(previewHtml);
          upload_image(file, 'logourl', fileId, html, previewContainer);
      }
    };

    if (file.type.startsWith('image/') || file.type === "application/pdf") {
        reader.readAsDataURL(file);
    } else {
        const errorContainer = document.getElementById('file-error');
        errorContainer.textContent = "{{ section.settings.unsupport }}";
    }
}
</script>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const businessBlock = document.querySelector('.business-type');
    const companyBlock = document.querySelector('.business-type-block');
    const personalBlock = document.querySelector('.personal-type-block'); 
    const companySelect = companyBlock?.querySelector('select');
    const disabledClass = document.querySelector('#label_72');
    const businessButtons = businessBlock?.querySelectorAll('.toggle-select');

    if (!businessBlock || !companyBlock || !personalBlock || businessButtons.length === 0) return;
    companyBlock.classList.remove('hidden');
    personalBlock.classList.add('hidden');

    if (companySelect) {
      companySelect.disabled = true;
    }
    disabledClass.classList.add('disabled');

    businessButtons.forEach(button => {
      button.addEventListener('click', function () {
        const selectedValue = this.getAttribute('data-type').trim().toLowerCase();

        if (selectedValue === 'business') {
          companyBlock.classList.remove('hidden');
          personalBlock.classList.add('hidden');

          if (companySelect) companySelect.disabled = false;
          disabledClass.classList.remove('disabled');
        } else if (selectedValue === 'personal') {
          personalBlock.classList.remove('hidden');
          companyBlock.classList.add('hidden');

          if (companySelect) {
            companySelect.value = '{{ section.settings.selectoption }}';
            companySelect.disabled = true;
          }
          disabledClass.classList.add('disabled');
        }
      });
    });
  });
</script>

<script>
    document.getElementById('bgfileInput').addEventListener('change', function () {
      const file = this.files[0];
      const errorContainer = document.getElementById('file-error-2');
      if (!file) return;
      const fileSizeKB = file.size / 1024;
      const fileSizeMB = fileSizeKB / 1024;

      if (fileSizeKB < 1) {
        errorContainer.textContent = "File is too small. Minimum size is 1KB.";
        this.value = '';
      } else if (fileSizeMB > 20) {
        errorContainer.textContent = "File is too large. Maximum size is 20MB.";
        this.value = '';
      } else {
        errorContainer.textContent = '';
        console.log('File is valid:', file.name, `${fileSizeMB.toFixed(2)} MB`);
      }
    });


  $(document).ready(function () {
  const dropArea = $('#cid_13 .jfUpload-wrapper');
  const bgfileInput = $('[name="bglogo"]');
  const errorContainersec = $('<div id="file-error-2" style="color:red; margin-top:5px; font-size: 11px;"></div>');
  dropArea.after(errorContainersec);

  function validateFileSize(file) {
        const sizeKB = file.size / 1024;
        const sizeMB = sizeKB / 1024;

        if (sizeKB < 1) {
            errorContainersec.text("File is too small. Minimum size is 1KB.");
            return false;
        } else if (sizeMB > 20) {
            errorContainersec.text("File is too large. Maximum size is 20MB.");
            return false;
        } else {
            errorContainersec.text(""); // Clear any error
            return true;
        }
    }
  // Highlight area when file is dragged over
  dropArea.on('dragover', function (event) {
      event.preventDefault(); // Prevent default behavior
      event.stopPropagation();
      $(this).addClass('drag-over'); // Add CSS class for styling
  });

  // Remove highlight when dragging out
  dropArea.on('dragleave', function (event) {
      event.preventDefault();
      event.stopPropagation();
      $(this).removeClass('drag-over');
  });

  dropArea.on('drop', function (event) {
      event.preventDefault();
      event.stopPropagation();
      $(this).removeClass('drag-over');

      let files = event.originalEvent.dataTransfer.files;
      if (files.length > 0) {
            const file = files[0];
            if (validateFileSize(file)) {
                bgfileInput[0].files = files;
                console.log('Files dropped:', file);
                bgHandleFilePreview(file);
            } else {
                bgfileInput.val('');
            }
        }
  });

  // Click event to open file input
  dropArea.on('click', function (event) {
    event.stopImmediatePropagation(); // Prevents duplicate event firing
  
  if (!bgfileInput.data('clicked')) {
    bgfileInput.data('clicked', true); // Mark as clicked
    bgfileInput.trigger('click');
      
      setTimeout(() => {
        bgfileInput.removeData('clicked'); // Reset flag after some time
      }, 500);
  }
  });

  // Handle file selection from input
  bgfileInput.change(function () {
      console.log('File selected:', this.files[0]);
      bgHandleFilePreview(this.files[0]);
  });

  ///////////// getting gclid
function getCookie(name) {
    const cookies = document.cookie.split(';');
    for (let cookie of cookies) {
        const [key, value] = cookie.trim().split('=');
        if (key === name) return decodeURIComponent(value);
    }
    return null;
}
  function getParam(name) {
        const urlParams = new URLSearchParams(window.location.search);
        return urlParams.get(name);
  }

    /////////gclid value login///////
    let gclidValue = null;
    const gcl = getCookie('_gcl_aw');
  if (gcl) {
      const parts = gcl.split('.');
      gclidValue = parts[parts.length - 1]; // get the last part
  } else {
      gclidValue = getParam('gclid');
  }
  
  if (gclidValue) {
      $('#gclid').val(gclidValue);
  }
    
    /////////fbclid value login///////
   let fbclidValue = null;
  
  const fbc = getCookie('_fbc');
  if (fbc) {
      console.log('fbc');
      console.log(fbc);
      const parts = fbc.split('.');
      fbclidValue = parts[parts.length - 1]; // get the last part
  } else {
      console.log('getting fbclid from url');
      fbclidValue = getParam('fbclid');
  }
  
  if (fbclidValue) {
      $('#fbclid').val(fbclidValue);
  }
    // ===== MSCLKID Logic =====
  let msclkidValue = null;
  const uetmsclkid = getCookie('_uetmsclkid');
  if (uetmsclkid) {
       msclkidValue = uetmsclkid.replace(/^_uet/, '');
  } else {
      msclkidValue = getParam('msclkid');
  }
  if (msclkidValue) {
    $('#msclkid').val(msclkidValue);
  }
});

function bgHandleFilePreview(file) {
    console.log('in bgHandleFilePreview function');
    const previewContainer = $('#bg-file-preview');
    const reader = new FileReader();
    const fileId = generateRandomId(); // Generate a random ID for each file

    reader.onload = function (e) {
        console.log('in reader onload');
        const fileSize = (file.size / 1024).toFixed(2) + " KB"; // Convert to KB
        let html = '';
        let previewHtml = '';

        if (file.type.startsWith('image/')) {
            // If it's an image, display it
            html = `
                <div class="file-preview-item bg-file-preview-item">
                    <div class="image-with-title">
                        <img src="${e.target.result}" alt="${file.name}" class="file-preview-image" style="max-width: 25px; max-height: 25px;">
                        <p>${file.name} (${fileSize})</p>
                    </div>
                    <p class="bg-delete-element"></p>
                </div>
            `;
            previewHtml = `
                      <div class="file-preview-item bg-file-preview-item" id="${fileId}">
                          <div class="image-with-title">
                                 <img src="${e.target.result}" alt="${file.name}" class="file-preview-image" style="max-width: 25px; max-height: 25px;">
                                 <p>Uploading ${file.name} (${fileSize})</p>
                          </div>
                              <p class="uploadContainer"><span id="loading-dots">{%- render 'icon', icon: 'loader' %}</span></p>
                      </div>
            `;
        } else if (file.type === "application/pdf") {
            // If it's a PDF, use an icon or embed viewer
            html = `
                <div class="file-preview-item bg-file-preview-item">
                    <div class="image-with-title">
                        <img src="https://cdn.shopify.com/s/files/1/0779/7686/3066/files/81975517a51651e8f8940759360d01da.jpg?v=1743361832" alt="PDF" class="file-preview-image" style="max-width: 25px; max-height: 25px;">
                        <p>${file.name} (${fileSize})</p>
                    </div>
                    <p class="bg-delete-element"></p>
                </div>
            `;
              previewHtml = `
            <div class="file-preview-item bg-file-preview-item" id="${fileId}">
                <div class="image-with-title">
                       <img src="https://cdn.shopify.com/s/files/1/0779/7686/3066/files/81975517a51651e8f8940759360d01da.jpg?v=1743361832" alt="${file.name}" class="file-preview-image" style="max-width: 25px; max-height: 25px;">
                        <p>Uploading ${file.name} (${fileSize})</p>
                  </div>
                    <p class="uploadContainer"><span id="loading-dots">{%- render 'icon', icon: 'loader' %}</span></p>
            </div>
            `;
        } else {
            const errorContainer = document.getElementById('file-error-2');
             errorContainer.textContent = "{{ section.settings.unsupport }}.";
        }
      if (file.type.startsWith('image/') || file.type === "application/pdf") {
          previewContainer.html(previewHtml);
          upload_image(file, 'bgurl', fileId, html, previewContainer);
      }
    };

    if (file.type.startsWith('image/') || file.type === "application/pdf") {
        reader.readAsDataURL(file);
    } else {
        const errorContainer = document.getElementById('file-error-2');
        errorContainer.textContent = "{{ section.settings.unsupport }}";
    }
}
</script>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const buttons = document.querySelectorAll('.toggle-select');

    buttons.forEach(button => {
      button.addEventListener('click', function () {
        const group = button.getAttribute('data-group');
        // Unselect other buttons in the same group
        document.querySelectorAll(`.toggle-select[data-group="${group}"]`).forEach(btn => {
          btn.classList.remove('selected');
        });
        // Select current button
        button.classList.add('selected');
      });
    });
  });
</script>
<script>

    setTimeout(function(){
      const video2 = document.querySelector('.img-fluid');
      if (video2) {
       video2.play().catch(error => { 
        console.error('Autoplay failed:', error);
    });
    }
    },2000);
    $('[name="logo"]').on('click', function(event) {
    console.log('Logo input clicked');
  });
  
  $('body').on('click', '.bg-delete-element', function() {
    $('#bgfileInput').val('');
    $('.bg-file-preview-item').remove();
  });
  $('body').on('click', '.delete-element', function() {
    $('#fileInput').val('');
    $('.file-preview-item').remove();
  });
    $('#cid_3 .jfUpload-button-container').click(function(event) {
        event.stopImmediatePropagation(); // Prevents duplicate event firing
        const logoInput = $('[name="logo"]');
        
        if (!logoInput.data('clicked')) {
            logoInput.data('clicked', true); // Mark as clicked
            logoInput.trigger('click');
            
            setTimeout(() => {
                logoInput.removeData('clicked'); // Reset flag after some time
            }, 500);
        }
    });

    $('#cid_13 .jfUpload-button-container').click(function(event) {
        event.stopImmediatePropagation(); // Prevents duplicate event firing
        const logoInput = $('[name="bglogo"]');
        
        if (!logoInput.data('clicked')) {
            logoInput.data('clicked', true); // Mark as clicked
            logoInput.trigger('click');
            
            setTimeout(() => {
                logoInput.removeData('clicked'); // Reset flag after some time
            }, 500);
        }
    });

    document.querySelector('.first_tab').addEventListener('click', function () {
      $('.step-1').show();
      $('.step-2').hide();
    });

    // moving to step 5 from 4, the last step
    $('.skip-text').click(function(){
      $('.step-4').hide();
      $('.step-5').show();
      startCountdown();
      webhookCall('{{ section.settings.webhook3 }}'); ///webhook 3
      
    });
    document.getElementById("form-pagebreak-next_14").addEventListener("click", function () {
      const fileInput = document.getElementById('bgfileInput');
      if(fileInput.files[0]){
        $('.bg-file-required').removeClass('show');
        document.querySelector(".step_form_row").classList.add('right_image_bg', 'last-step');
        $('.step-4').hide();
        $('.step-5').show();
        webhookCall('{{ section.settings.webhook3 }}'); ///webhook 3
        startCountdown();
        addRecord();
      } else {
        $('.bg-file-required').addClass('show');
        $('#cid_13 .jfUpload-wrapper').css('border-color', 'red');
        $('#cid_13 .jfUpload-button .jfUpload-heading').addClass('color');
      }
    });

    document.addEventListener("DOMContentLoaded", function () {
    var input = document.querySelector("#input_6_full");
      var preferredCountries = "{{ section.settings.preferred_countries }}".split(',');

        var iti = window.intlTelInput(input, {
          initialCountry: "{{ section.settings.defaultcountry }}",
          separateDialCode: true,
          preferredCountries: preferredCountries,
          geoIpLookup: function (callback) {
              fetch("https://ipapi.co/json")
                  .then(response => response.json())
                  .then(data => callback(data.country_code.toLowerCase()))
                  .catch(() => callback("{{ section.settings.defaultcountry }}"));
          },
          utilsScript: "https://cdn.jsdelivr.net/npm/intl-tel-input@17.0.19/build/js/utils.js",
      });
      window.iti = iti;
    // moving to step 3 from 2
    document.getElementById('form-pagebreak-next_12').addEventListener('click', function () {
    let allFilled = true;
    let emailValid = true;
    let phoneValid = true;

    var countryData = iti.getSelectedCountryData();
    $('.step-2 input[type="text"], .step-2 input[type="email"], .step-2 input[type="tel"]').each(function() {
        if ($(this).val().trim() == "") {
            console.log('empty');
            $(this).addClass('borderissue');
            $(this).parents('li').find('.email-error').removeClass('show');
            $(this).parents('li').find('.required-field').addClass('show');
            allFilled = false;
        } else {
            $(this).removeClass('borderissue');
            $(this).parents('li').find('.required-field').removeClass('show');
        }

        if ($(this).attr('type') === 'tel' && $(this).val().trim() !== "") {

        if(iti.isValidNumber() == false){
             $(this).parents('li').find('.phone-error').addClass('show');
             phoneValid = false;
          } else{
            $(this).parents('li').find('.phone-error').removeClass('show');
          }
        }
        // Email validation
        if ($(this).attr('type') === 'email' && $(this).val().trim() !== "") {
            let emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailPattern.test($(this).val().trim())) {
                $(this).addClass('borderissue');
                $(this).parents('li').find('.email-error').addClass('show');
                emailValid = false;
            } else {
                $(this).removeClass('borderissue');
                $(this).parents('li').find('.email-error').removeClass('show');
            }
        }
    });

    if (allFilled && emailValid && phoneValid) {
      var _terms = $('[name="terms"]').prop('checked');
      if(_terms == true){
          window.dataLayer.push({
            'event': 'jot_form_submit',
            'formId': "{{ section.settings.formid }}",
          });
        
        if($('.agent-video').length <= 1){
        document.querySelector(".step_form_row").classList.add('swap_sec');
        document.querySelector(".custom_steps_form").classList.add('swap_sec_padding');
        document.querySelector("body").classList.add('swap_sec_body');
         addRecord('{{ section.settings.webhook1 }}');
          $('.step-2').hide();
          $('.step-3').show();
          window.scrollTo({
            top: 0,
            behavior: 'smooth'
          });
        } else {
          $('#form-pagebreak-next_12').prop('disabled', true);
          $('.loading-dots').addClass('show');
          webhookCall('{{ section.settings.webhook1 }}', 'webhook_1');
          addRecord('{{ section.settings.webhook1 }}', 'webhook_1');
        }
        } else {
          alert('{{ section.settings.terms_error }}');
        }
    }
});
});


    // moving to step 2 from 1
  
    document.getElementById("form-pagebreak-next_11").addEventListener("click", async function () {
      const fileInput = document.getElementById('fileInput');
      if(fileInput.files[0]){
      $('.file-required').removeClass('show'); 
      document.querySelector(".tab").classList.remove('active');
      document.querySelector(".sec_tab").classList.add('active');
      $('.step-1').hide();
      $('.step-2').show();
      await submissionStart();
      } else {
        console.log('logo required');
        $('#cid_3 .jfUpload-wrapper').css('border-color', 'red');
        $('#cid_3 .jfUpload-button .jfUpload-heading').addClass('color');
        $('.file-required').addClass('show');
      }
    });
    function agentVideo(){
      const video = document.getElementById('customVideo');
      const playButton = document.getElementById('customPlayButton');
      console.log('agentVideo function');
      // Play video and hide button
      document.addEventListener('click', function (e) {
        console.log(e.target);
        if (
            e.target &&
            (e.target.id === 'customPlayButton' || e.target.classList.contains('play-button'))
          ) {
            video.muted = false;
            video.currentTime = 0;
            video.play();
            $('#customVideo').attr('controls', true);
            playButton.style.display = 'none';
          }
      });

      // Show button again when video ends
      video.addEventListener('ended', function () {
        $('#customVideo').attr('controls', false);
        playButton.style.display = 'flex';
      });
  }
    async function submissionStart(){
      if($('#submissionid').val() == ''){
        const formID = "{{ section.settings.formid }}";
        const apiKey = '544c28cc9e12d4f364554d517534d132';
        const submissionData = {
            "submission": {
                "name": "John Doe",
                "email": "example@example.com"
            }
        };

        fetch(`https://api.jotform.com/form/${formID}/submissions?apiKey=${apiKey}`, {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(submissionData)
        })
        .then(response => response.json())
        .then(data => {
          console.log(data);
          if (data.content && data.content.submissionID) {
              const submissionID = data.content.submissionID;
              document.getElementById("submissionid").value = submissionID;
              addRecord();
          }
        })
        .catch(error => console.error("Error:", error));
      }
    }

  function webhookCall(url, optionalWebhook){
      const formData = new FormData();
      var _submissionID = $('#submissionid').val();
      var _email = $('#input_5').val();
      var _name = $('#input_4').val();
      var _logo = $('#logourl').val();
      var _phone = "+"+iti.getSelectedCountryData().dialCode+$('#input_6_full').val();
      var _bgurl = $('#bgurl').val();
      var _source = $('#source').val();
      var _field = $('#field').val();
      var _timeline = $('#timeline').val();
      var company_type = $('#company_type').val();
      var _budget = $('#budget').val();
      var _msclkid = $('#msclkid').val();
      var _gclid = $('#gclid').val();
      var _fbclid = $('#fbclid').val();
      var _code =  iti.getSelectedCountryData().dialCode;
    
    
      var _url = url+'?SubmissionID='+_submissionID+'&Email='+_email+'&Name='+_name+'&PhoneNumber='+_phone+'&Logo='+_logo+'&Source='+_source+'&Place='+_field+'&Background='+_bgurl+'&country_code='+_code+'&fbclid='+_fbclid+'&gclid='+_gclid+'&msclkid='+_msclkid+'&budget='+_budget+'&company_type='+company_type+'&timeline='+_timeline;
        $.ajax({
            url: _url,
            type: "POST",
            data: formData,
            contentType: false,
            cache: false,
            processData: false,
            success: function(response) {
              if(typeof optionalWebhook !== 'undefined'){
                const responseName = response.trim().toLowerCase();;
                addVideo(responseName);
              }
              console.log(response);
            },
            error: function(err) {
                addVideo('error');
                console.error(err);
            }
        });
  }

    function addVideo(responseName) {
                var matchFound = false;
                $('.agent-video').each(function () {
                    const agentName = $(this).find('.agent_name').text().trim().toLowerCase();
                    const video_duration = $(this).find('.agent_duration').text().trim();
                    
                    const responseMatch = responseName.trim().toLowerCase();
                    console.log(agentName+ ' = '+responseMatch);
                    if (agentName === responseMatch) {
                      console.log('matched');
                      var _txt = $('.custom-video-title').text();
                      $('.custom-video-title').text('👋 '+agentName.charAt(0).toUpperCase() + agentName.slice(1)+' '+_txt);
                      const videoSrc = $(this).find('.agent_video').text().trim();
                      const video = document.getElementById('customVideo');
                      const source = video.querySelector('source');
                      source.setAttribute('src', videoSrc);
                      video.load();
                      setTimeout(function(){
                      video.play();
                      }, 3000);
                      agentVideo();
                      matchFound = true;
                      $('#videoDuration').text(video_duration);
                      return false;
                    }
                });
                if (!matchFound) {
                  $('.custom-video-wrapper').addClass('no-video');
                  $('.timer_box').addClass('no-video');
                }
                setTimeout(function(){
                document.querySelector(".step_form_row").classList.add('swap_sec');
                document.querySelector(".custom_steps_form").classList.add('swap_sec_padding');
                document.querySelector("body").classList.add('swap_sec_body');
                  $('.step-2').hide();
                  $('.step-3').show();
                }, 500);

    }
    async function addRecord(optionalUrl, optionalWebhook){
      const formData = new FormData();
      var _phone = "+"+iti.getSelectedCountryData().dialCode+$('#input_6_full').val();
      var SUBMISSION_ID = $('#submissionid').val();
      formData.append("submission[3][first]", $('#input_4').val());  
      formData.append("submission[3][last]", "");
      formData.append("submission[4]", $('#input_5').val()); // Email
      formData.append("submission[5]", _phone); // Phone
      formData.append("submission[6]", $('#logourl').val()); // file
      formData.append("submission[7]", $('#bgurl').val()); // file
      formData.append("submission[8]", $('#source').val()); // source
      formData.append("submission[9]", $('#field').val()); // field
      formData.append("submission[10]", $('#gclid').val()); // gclid
      formData.append("submission[11]", $('#fbclid').val()); // fbclid
      formData.append("submission[12]", $('#msclkid').val()); // msclkid
      formData.append("submission[13]", $('#company_type').val()); // company_type
      formData.append("submission[14]", $('#timeline').val()); // timeline
      formData.append("submission[15]", $('#budget').val()); // budget
      

      try {
          const response = await fetch(
            `https://api.jotform.com/submission/${SUBMISSION_ID}?apiKey=544c28cc9e12d4f364554d517534d132`, 
              {
                  method: "POST",
                  body: formData
              }
          );

          const result = await response.json();
          console.log("Submission Response:", result);
          if (typeof optionalUrl !== "undefined" && typeof optionalWebhook == "undefined") {
            webhookCall(optionalUrl)
          }
      } catch (error) {
          console.error("Error submitting form data:", error);
      }
    }
    async function upload_image(file, id, fieldID, html, previewContainer){
       if (id == "bgurl") {
            $('#form-pagebreak-next_14').prop('disabled', true);
         } else {
          $('#form-pagebreak-next_11').prop('disabled', true);
       }
      const formData = new FormData();
      formData.append("upload_preset", "neon_unsigned_preset")
      formData.append('file', file);

        $.ajax({
            url: "https://api.cloudinary.com/v1_1/dz5h9zbom/image/upload",
            type: "POST",
            data: formData,
            contentType: false,
            cache: false,
            processData: false,
            success: function(response) {
              console.log(response); 
              if(response.secure_url){
                console.log('Uploaded URL:', response.secure_url); 
                $('#'+id).val(response.secure_url);
                  if (id == "bgurl") {
                      $(`#${fieldID}`).parents('#bg-file-preview').html(html);
                      $('#form-pagebreak-next_14').prop('disabled', false);
                  } else {
                      $(`#${fieldID}`).parents('#file-preview').html(html);
                      $('#form-pagebreak-next_11').prop('disabled', false);
                  }
            } else {
                if (id == "bgurl") {
                  const dropArea = $('#cid_13 .jfUpload-wrapper');
                  const errorContainersec = $('<div id="file-error-2" style="color:red; margin-top:5px; font-size: 11px;">{{ section.settings.fileerror }}.</div>');
                  dropArea.after(errorContainersec);
                  $(`#${previewContainer}`).html('');
                } else {
                 const dropArea = $('#cid_3 .jfUpload-wrapper');
                  const errorContainersec = $('<div id="file-error" style="color:red; margin-top:5px; font-size: 11px;">{{ section.settings.fileerror }}</div>');
                  dropArea.after(errorContainersec);
                  $(`#${previewContainer}`).html('');
                }
            }
            },
            error: function(err) {
                   if (id == "bgurl") {
                  const dropArea = $('#cid_13 .jfUpload-wrapper');
                  const errorContainersec = $('<div id="file-error-2" style="color:red; margin-top:5px; font-size: 11px;">{{ section.settings.fileerror }}.</div>');
                  dropArea.after(errorContainersec);
                  $(`#${previewContainer}`).html('');
                } else {
                 const dropArea = $('#cid_3 .jfUpload-wrapper');
                  const errorContainersec = $('<div id="file-error" style="color:red; margin-top:5px; font-size: 11px;">{{ section.settings.fileerror }}</div>');
                  dropArea.after(errorContainersec);
                  $(`#${previewContainer}`).html('');
                }
            }
        });
    }
  
    document.querySelector('.timer_box a').addEventListener('click', function (event) {
      event.preventDefault();
  
      var timerBox = document.querySelector('.timer_box');
      timerBox.style.backgroundImage = 'none';
    });

    // 3rd screen timer
    function startCountdown() {
      console.log('timer');
      const timerElement = document.getElementById("timer");
      let hours = 3;
      let minutes = 0;
      let seconds = 0;
  
      const intervalId = setInterval(() => {
        seconds--;
        if (seconds < 0) {
          seconds = 59;
          minutes--;
        }
        if (minutes < 0) {
          minutes = 59;
          hours--;
        }
  
        const formattedTime = `${hours.toString()}:${minutes.toString().padStart(2, "0")}`;
        timerElement.textContent = formattedTime;
  
        if (hours === 0 && minutes === 0) {
          clearInterval(intervalId);
        }
      }, 1000);
    }
</script>
<script>
    // first screen timer
  function newCountdown() {
  const timerElementnew = document.getElementById("new_timer");

  // Get the current time
  const now = new Date();

  // Calculate the time remaining until midnight
  const endOfDay = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1, 0, 0, 0);
  let timeRemaining = Math.floor((endOfDay.getTime() - now.getTime()) / 1000); // Remaining time in seconds

  // Function to format the remaining time as HH:MM:SS
  function formatTime(seconds) {
    const hours = Math.floor(seconds / 3600);
    const minutes = Math.floor((seconds % 3600) / 60);
    const secondsRemaining = seconds % 60;
    return `${hours.toString().padStart(2, "0")}:${minutes.toString().padStart(2, "0")}:${secondsRemaining.toString().padStart(2, "0")}`;
  }

  // Update the countdown every second
  const intervalIdnew = setInterval(() => {
    if (timeRemaining > 0) {
      timerElementnew.textContent = formatTime(timeRemaining);
      timeRemaining--;
    } else {
      clearInterval(intervalIdnew); // Stop the interval when time runs out
      timerElementnew.textContent = "00:00:00"; // Display zero when the countdown ends
    }
  }, 1000);

  // Display the initial time immediately
  timerElementnew.textContent = formatTime(timeRemaining);
}

// Start the countdown
newCountdown();
</script>
<script>
  document.addEventListener('DOMContentLoaded', function () {

  if($('.agent-video').length == 0){ 
    $('.custom-video-wrapper').addClass('no-video');
    $('.timer_box').addClass('no-video');
  }
   if($('.agent-video').length == 1){
        const videoSrc = $('.agent_video').text().trim();
        const video = document.getElementById('customVideo');
        const source = video.querySelector('source');
        source.setAttribute('src', videoSrc);
        video.load();
        const video_duration = $('.agent_duration').text().trim();
        $('#videoDuration').text(video_duration);
        setTimeout(function(){
        agentVideo();
        }, 500);
   }

  });
</script>

{% schema %}
{
"name": "Custom Steps Form",
"settings": [
  {
  "type": "text",
  "id": "formid",
  "label": "Form ID",
  "default":"250745462288060"
  },
  {
  "type": "text",
  "id": "webhook1",
  "label": "Webhook 1",
  "default":"https://hook.eu1.make.com/902w45w0qi3cgwmwnbs449wpe6r64fmh"
  },
  {
  "type": "text",
  "id": "webhook2",
  "label": "Webhook 2",
  "default":"https://hook.eu1.make.com/64y9f2gm0v5f9t8hv4y4ozp5cgpl0nu5"
  },
  {
  "type": "text",
  "id": "webhook3",
  "label": "Webhook 3",
  "default":"https://hook.eu1.make.com/7wngere2qtprr7t16kwi68clbr56o8ly"
  },
  {
    "type": "text",
    "id": "start_my_design",
    "label": "Start my design",
    "default":"Start my design"
  },
  {
  "type": "text",
  "id": "sectionTitle",
  "label": "Section Title",
  "default":"Offerte aanvragen"
  },
  {
  "type": "text",
  "id": "validfiles",
  "label": "File Type Text",
  "default":"Valid File Types"
  },
  {
  "type": "text",
  "id": "unsupport",
  "label": "Unsupport File Type Text",
  "default":"Unsupported file type"
  },
    {
  "type": "text",
  "id": "filesizemin",
  "label": "Min File Size Text",
  "default":"File is too small. Minimum size is 1KB."
  },
    {
  "type": "text",
  "id": "filesizemax",
  "label": "Min File Size Text",
  "default":"File is too large. Maximun size is 20MB."
  },
  {
  "type": "text",
  "id": "required",
  "label": "Required Text",
  "default":"This field is required"
  },
  {
  "type": "text",
  "id": "selectoption",
  "label": "Select Option Text",
  "default":"Select an option"
  },
    {
  "type": "text",
  "id": "fileerror",
  "label": "File Upload Error",
  "default":"Something went wrong in file upload, please try again."
  },

  {
  "type": "text",
  "id": "emailformat",
  "label": "Email Format Error",
  "default":"Please enter correct email"
  },
  {
  "type": "text",
  "id": "phoneformat",
  "label": "Phone Format Error",
  "default":"Phone no isn't correct"
  },
  {
  "type": "text",
  "id": "terms",
  "label": "Terms & Conditions",
  "default":"By submitting, you agree to Neonsfeer’s terms and conditions."
  },
  {
  "type": "text",
  "id": "newterms",
  "label": "Send quote & unsubscribe",
  },
  {
  "type": "text",
  "id": "terms_error",
  "label": "Terms & Conditions Error",
  "default":"Please Agree to Term & Conditions"
  },
  {
  "type": "text",
  "id": "defaultcountry",
  "label": "Default Country",
  "default":"us"
  },
  {
  "type": "text",
  "id": "preferred_countries",
  "label": "Preferred Countries (comma-separated, e.g. us,gb,ca,nz)",
  "default": "us,gb,ca,nz"
},
  {
  "type": "text",
  "id": "skip",
  "label": "Skip Text",
  "default":"Continue without own background"
  },
  {
  "type": "html",
  "id": "MainList",
  "label": "Breadcrumbs Html",
  "default":"<li>Ontvang <strong>gratis ontwerp</strong></li><li>Binnen <strong>3 uur</strong> in je mailbox</li><li>Binnen <strong>6 werkdagen geleverd</strong></li>"
  },
  {
  "type": "html",
  "id": "trust_lists",
  "label": "Trust List",
  "default":"<li>Ontvang <strong>gratis ontwerp</strong></li><li>Binnen <strong>3 uur</strong> in je mailbox</li><li>Binnen <strong>6 werkdagen geleverd</strong></li>"
  },
  {
  "type":"url",
  "id":"Video_url",
  "label":"Video link"
  },
  {
  "type":"url",
  "id":"Mobile_video_url",
  "label":"Video link Mobile"
  },
  {
  "type": "header",
  "content": "Tab 1 content"
  },
  {
    "type": "text",
    "id": "tabTitle1",
    "label": "Tab Title 1",
    "default":"1. Upload je logo"
  },

  {
    "type": "html",
    "id": "tabContent1",
    "label": "Tab content",
    "default":"<h2>Ontvang een offerte <br>en een gratis voorbeeld ontwerp</h2>"

  },
  {
    "type": "text",
    "id": "uploadContent",
    "label": "Upload content",
    "default":"Choose a file"
  },
  {
    "type": "text",
    "id": "uploadContent2",
    "label": "Upload content step 6",
    "default":"Choose a file"
  },
  {
    "type": "text",
    "id": "Button1",
    "label": "Button Text",
    "default":"Voltooi aanvraag"
  },
  {
    "type": "html",
    "id": "QouteText",
    "label": "Qoute Text",
    "default":"Upload today and receive your logo on . Still <b id='new_timer'>07:13:18</b> geldig."
  },
  {
  "type": "html",
  "id": "timer_text",
  "label": "Timer Text",
  "default": "Still <b id='new_timer'>00:00:00</b> valid."
},
  {
    "type": "html",
    "id": "customer_review",
    "label": "Customer Review",
    "default":"<p>Rated <b>4.8/5</b> 1,000+ happy customer</p>"
  },
  {
  "type": "text",
  "id": "delivery_date",
  "label": "Delivery Date"
  },
  {
  "type": "header",
  "content": "Tab 2 content"
  },
  {
  "type": "text",
  "id": "custom_video_title",
  "label": "Video Title",
  "default": "More information about your order"
},
  {
    "type": "text",
    "id": "tabTitle2",
    "label": "Tab Title 2",
    "default":"2. Je gegevens"
  },
  {
    "type": "html",
    "id": "FormHeading",
    "label": "Form Heading",
    "default":"<h2>Bijna klaar!<br> Vul je gegevens in </h2>"
  },
  {
    "type": "text",
    "id": "inputlable1",
    "label": "Name Input",
    "default":"Name"
  },
  {
    "type": "text",
    "id": "inputplaceholder1",
    "label": "Name placeholder",
    "default":"Bijv. Anja"

  },
  {
    "type": "text",
    "id": "inputlable2",
    "label": "Email Input",
    "default":"E-mailadres"

  },
  {
    "type": "text",
    "id": "inputplaceholder2",
    "label": "Email placeholder",
    "default":"Bijv. joost@bb.nl"

  },
  {
    "type": "text",
    "id": "inputlable3",
    "label": "Telephone Input",
    "default":"Telefoonnummer"

  },
  {
    "type": "text",
    "id": "inputplaceholder3",
    "label": "Telepone placeholder",
    "default":"telefoon"

  },
  {
    "type": "text",
    "id": "ButtonTextForm",
    "label": "Form button Text",
    "default":"Send and receive quote within 3 hours!"
  },
  {
    "type": "text",
    "id": "freeSample",
    "label": "Free Sample Text",
    "default":"Jouw gratis voorbeeld wordt voorbereid"
  },
  {
    "type": "text",
    "id": "field_error",
    "label": "Error Text",
    "default": "Please Select required fields"
  },
  {
    "type": "text",
    "id": "freeSampleDesc",
    "label": "Free Sample Description",
    "default":"Zodra het logo klaar is, verschijnt hier een voorbeeld. Bekijk intussen enkele voorbeelden of scroll verder voor FAQ’s en inspiratie!"
  },
  {
    "type": "html",
    "id": "freeSampleFormDescription",
    "label": "Free Sample form Description",
    "default":"<h4>Beter voorbeeld? Upload een foto van je muur!</h4> <ul> <li>Ontvang een definitieve offerte</li> <li>Jouw voorbeeld wordt gemaakt op je muurfoto</li> <li>We kunnen jouw prijs nog preciezer berekenen</li> </ul>"
  },
  {
    "type": "html",
    "id": "uploadPhotoFormfree",
    "label": "Free Sample upload photo Description",
    "default":"<div class='file_heading'>Upload foto</div> <label for='wall_image'>Drag and drop files here</label>"
  },
  {
    "type": "text",
    "id": "uploadPhotobuttonfree",
    "label": "Free Sample upload photo button Text",
    "default":"Voeg muur toe aan je voorbeeld"
  },
  {
    "type": "html",
    "id": "formButtonQoute",
    "label": "Form Quote Text",
    "default":"<div class='box_head'>Jouw voorbeeld verschijnt hier binnen:</div><div class='time'><span id='timer'>2:59</span> uur</div>"
  },
  {
    "type": "image_picker",
    "id": "formButtonQouteImage",
    "label": "TimerBox Background Image"
  },
  {
  "type": "header",
  "content": "Timer Content"
  },
  {
    "type": "html",
    "id": "timerHmtl",
    "label": "Timer arrive",
    "default":"Upload vandaag en ontvang je logo op 8 september Nog <b id='new_timer'>00:00:00</b> geldig."
  }
],
"blocks": [
  {
    "type": "agent",
    "name": "Agent",
    "limit": 5,
    "settings": [
      {
        "type": "text",
        "id": "agent_name",
        "label": "Agent Name",
        "default": "Jan"
      },
      {
        "type": "text",
        "id": "agent_video",
        "label": "Agent Video"
      },
      {
        "type": "text",
        "id": "agent_duration",
        "label": "Video Duration"
      }
      
   ]
  },
  {
    "type": "tab",
    "name": "Questions",
    "limit": 8,
    "settings": [
      {
        "type": "text",
        "id": "drop_Type",
        "label": "Block Type Name"
      },
      {
        "type": "text",
        "id": "tab_title",
        "label": "Tab Title",
        "default": "Tab Title"
      },
      {
        "type": "textarea",
        "id": "tab_buttons",
        "label": "Tab Buttons"
      },
      {
        "type": "select",
        "id": "customization_type",
        "label": "Input Type",
        "options": [
          { "value": "dropdown", "label": "Dropdown" },
          { "value": "radio", "label": "Radio Buttons" },
          { "value": "button", "label": "Buttons" }
        ],
        "default": "button"
      },
      {
        "type": "select",
        "id": "company_types",
        "label": "Company Type",
        "options": [
          { "value": "personal-type-block", "label": "Personal" },
          { "value": "business-type-block", "label": "Business" },
          { "value": "notset", "label": "NA" }
        ],
        "default": "notset"
      },
      {
      "type": "checkbox",
      "id": "required",
      "label": "Required",
      "default": false
    }
    ]
  },
  {
     "type": "Image",
     "name": "Add Image",
     "limit": 4,
     "settings": [
       {
       "type":"image_picker",
       "id":"img-card",
       "label":"Add Image"
       }
     ]
   }
],
"presets": [{
"name": "Custom Steps Form",
"blocks": [
    {
      "type": "tab",
      "settings": {
        "tab_title": "What is Your Field",
        "tab_buttons": "Tech, Resturent",

      }
    },
    {
      "type": "tab",
      "settings": {
        "tab_title": "Help us! How did you find Neonsfeer?",
        "tab_buttons": "Facebook, Instagram, Linkdin, Youtube",
      }
    }
]
}]
}
{% endschema %}
